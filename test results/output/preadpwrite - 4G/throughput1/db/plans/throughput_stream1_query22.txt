 EXPLAIN select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substr(c_phone, 1, 2) as cntrycode, c_acctbal from customer where substr(c_phone, 1, 2) in ('28', '24', '10', '18', '23', '21', '25') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substr(c_phone, 1, 2) in ('28', '24', '10', '18', '23', '21', '25') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as vip group by cntrycode order by cntrycode;
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=56693.82..57078.91 rows=3011 width=44)
   Group Key: (substr((customer.c_phone)::text, 1, 2))
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=21701.51..21701.52 rows=1 width=8)
           ->  Gather  (cost=21701.30..21701.51 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=20701.30..20701.31 rows=1 width=32)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..20681.50 rows=7919 width=4)
                             Filter: ((c_acctbal > '0'::double precision) AND (substr((c_phone)::text, 1, 2) = ANY ('{28,24,10,18,23,21,25}'::text[])))
   ->  Gather Merge  (cost=34992.30..35313.39 rows=2510 width=44)
         Workers Planned: 2
         Params Evaluated: $1
         ->  Partial GroupAggregate  (cost=33992.28..34023.65 rows=1255 width=44)
               Group Key: (substr((customer.c_phone)::text, 1, 2))
               ->  Sort  (cost=33992.28..33995.41 rows=1255 width=36)
                     Sort Key: (substr((customer.c_phone)::text, 1, 2))
                     ->  Nested Loop Anti Join  (cost=0.43..33927.68 rows=1255 width=36)
                           ->  Parallel Seq Scan on customer  (cost=0.00..20681.50 rows=2917 width=24)
                                 Filter: ((c_acctbal > $1) AND (substr((c_phone)::text, 1, 2) = ANY ('{28,24,10,18,23,21,25}'::text[])))
                           ->  Index Only Scan using i_o_custkey on orders  (cost=0.43..48.43 rows=18 width=4)
                                 Index Cond: (o_custkey = customer.c_custkey)
(21 rows)

