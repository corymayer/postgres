 EXPLAIN select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'JAPAN' group by s_name order by numwait desc, s_name LIMIT 100;
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=726129.54..726129.54 rows=1 width=34)
   ->  Sort  (cost=726129.54..726129.54 rows=1 width=34)
         Sort Key: (count(*)) DESC, supplier.s_name
         ->  GroupAggregate  (cost=726129.51..726129.53 rows=1 width=34)
               Group Key: supplier.s_name
               ->  Sort  (cost=726129.51..726129.51 rows=1 width=26)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=1981.44..726129.50 rows=1 width=26)
                           ->  Nested Loop Semi Join  (cost=1981.00..726124.04 rows=1 width=34)
                                 ->  Gather  (cost=1980.57..726114.78 rows=1 width=34)
                                       Workers Planned: 2
                                       ->  Nested Loop Anti Join  (cost=980.57..725114.68 rows=1 width=34)
                                             ->  Hash Join  (cost=980.13..565993.49 rows=133314 width=34)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..551182.02 rows=3332854 width=8)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                   ->  Hash  (cost=960.13..960.13 rows=1600 width=30)
                                                         ->  Nested Loop  (cost=32.69..960.13 rows=1600 width=30)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                                     Filter: (n_name = 'JAPAN'::bpchar)
                                                               ->  Bitmap Heap Scan on supplier  (cost=32.69..942.82 rows=1600 width=34)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     ->  Bitmap Index Scan on i_s_nationkey  (cost=0.00..32.29 rows=1600 width=0)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using i_l_orderkey on lineitem l3  (cost=0.44..9.39 rows=19 width=8)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 ->  Index Scan using i_l_orderkey on lineitem l2  (cost=0.44..9.25 rows=57 width=8)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..5.46 rows=1 width=4)
                                 Index Cond: (o_orderkey = l1.l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(33 rows)

