 EXPLAIN select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = 'CHINA' and n2.n_name = 'IRAN') or (n1.n_name = 'IRAN' and n2.n_name = 'CHINA') ) and l_shipdate between date '1995-01-01' and date '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year;
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153621.78..155214.72 rows=10008 width=68)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153621.78..154962.76 rows=10184 width=68)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=152621.76..152787.25 rows=5092 width=68)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152621.76..152634.49 rows=5092 width=68)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Hash Join  (cost=109207.69..152308.24 rows=5092 width=68)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           Join Filter: (((n1.n_name = 'CHINA'::bpchar) AND (n2.n_name = 'IRAN'::bpchar)) OR ((n1.n_name = 'IRAN'::bpchar) AND (n2.n_name = 'CHINA'::bpchar)))
                           ->  Nested Loop  (cost=1.83..26676.28 rows=100048 width=30)
                                 ->  Hash Join  (cost=1.40..9847.15 rows=10000 width=30)
                                       Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..8312.00 rows=125000 width=8)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                             ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                   Filter: ((n_name = 'IRAN'::bpchar) OR (n_name = 'CHINA'::bpchar))
                                 ->  Index Scan using i_o_custkey on orders  (cost=0.43..1.51 rows=17 width=8)
                                       Index Cond: (o_custkey = customer.c_custkey)
                           ->  Hash  (cost=102954.28..102954.28 rows=293646 width=42)
                                 ->  Nested Loop  (cost=0.72..102954.28 rows=293646 width=42)
                                       ->  Nested Loop  (cost=0.29..1561.02 rows=1600 width=30)
                                             Join Filter: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..967.64 rows=20000 width=8)
                                             ->  Materialize  (cost=0.00..1.39 rows=2 width=30)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                                         Filter: ((n_name = 'CHINA'::bpchar) OR (n_name = 'IRAN'::bpchar))
                                       ->  Index Scan using i_l_suppkey on lineitem  (cost=0.43..61.53 rows=184 width=20)
                                             Index Cond: (l_suppkey = supplier.s_suppkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
(31 rows)

