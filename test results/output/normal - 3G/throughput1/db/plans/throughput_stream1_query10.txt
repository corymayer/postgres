 EXPLAIN select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date '1994-05-01' and o_orderdate < date '1994-05-01' + interval '3 months' and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc LIMIT 20;
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=831458.82..831458.87 rows=20 width=176)
   ->  Sort  (cost=831458.82..832039.76 rows=232374 width=176)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))) DESC
         ->  Finalize GroupAggregate  (cost=796727.49..825275.43 rows=232374 width=176)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=796727.49..821499.36 rows=193644 width=176)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=795727.47..798148.02 rows=96822 width=176)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=795727.47..795969.52 rows=96822 width=176)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 ->  Hash Join  (cost=45455.30..779435.13 rows=96822 width=176)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=45453.74..778245.56 rows=96822 width=154)
                                             ->  Hash Join  (cost=45453.30..187512.01 rows=97027 width=150)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=4943.30..132126.05 rows=97027 width=8)
                                                         Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                                         ->  Bitmap Index Scan on i_o_orderdate  (cost=0.00..4885.08 rows=232865 width=0)
                                                               Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                                   ->  Hash  (cost=20119.00..20119.00 rows=600000 width=146)
                                                         ->  Seq Scan on customer  (cost=0.00..20119.00 rows=600000 width=146)
                                             ->  Index Scan using i_l_orderkey on lineitem  (cost=0.44..5.95 rows=14 width=12)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(27 rows)

