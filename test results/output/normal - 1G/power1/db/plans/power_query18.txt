 EXPLAIN select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 313 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate LIMIT 100;
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=534323.35..534323.60 rows=100 width=39)
   ->  Sort  (cost=534323.35..535660.15 rows=534721 width=39)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         ->  Finalize GroupAggregate  (cost=449308.19..513886.70 rows=534721 width=39)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=449308.19..505197.49 rows=445600 width=39)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=448308.16..452764.16 rows=222800 width=39)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=448308.16..448865.16 rows=222800 width=39)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 ->  Nested Loop  (cost=308765.62..422424.02 rows=222800 width=39)
                                       ->  Hash Join  (cost=308765.18..357094.88 rows=55689 width=39)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Hash Join  (cost=300980.18..347073.81 rows=55689 width=20)
                                                   Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..31576.00 rows=625000 width=16)
                                                   ->  Hash  (cost=298786.51..298786.51 rows=133654 width=4)
                                                         ->  GroupAggregate  (cost=0.43..297449.97 rows=133654 width=4)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::double precision)
                                                               ->  Index Scan using i_l_orderkey on lineitem lineitem_1  (cost=0.43..262432.06 rows=6001175 width=8)
                                             ->  Hash  (cost=5031.00..5031.00 rows=150000 width=23)
                                                   ->  Seq Scan on customer  (cost=0.00..5031.00 rows=150000 width=23)
                                       ->  Index Only Scan using i_l_orderkey_quantity on lineitem  (cost=0.43..1.02 rows=15 width=8)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
(26 rows)

