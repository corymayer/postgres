 EXPLAIN select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'ROMANIA' group by s_name order by numwait desc, s_name LIMIT 100;
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73957.11..73957.12 rows=1 width=34)
   ->  Sort  (cost=73957.11..73957.12 rows=1 width=34)
         Sort Key: (count(*)) DESC, supplier.s_name
         ->  GroupAggregate  (cost=73957.08..73957.10 rows=1 width=34)
               Group Key: supplier.s_name
               ->  Sort  (cost=73957.08..73957.09 rows=1 width=26)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=1.72..73957.07 rows=1 width=26)
                           ->  Nested Loop Semi Join  (cost=1.30..73956.56 rows=1 width=34)
                                 ->  Nested Loop Anti Join  (cost=0.86..73955.57 rows=1 width=34)
                                       ->  Nested Loop  (cost=0.43..25251.71 rows=79657 width=34)
                                             ->  Nested Loop  (cost=0.00..444.31 rows=400 width=30)
                                                   Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'ROMANIA'::bpchar)
                                                   ->  Seq Scan on supplier  (cost=0.00..318.00 rows=10000 width=34)
                                             ->  Index Scan using i_l_suppkey on lineitem l1  (cost=0.43..60.03 rows=199 width=8)
                                                   Index Cond: (l_suppkey = supplier.s_suppkey)
                                                   Filter: (l_receiptdate > l_commitdate)
                                       ->  Index Scan using i_l_orderkey_quantity on lineitem l3  (cost=0.43..1.02 rows=5 width=8)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 ->  Index Scan using i_l_orderkey_quantity on lineitem l2  (cost=0.43..0.98 rows=15 width=8)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4)
                                 Index Cond: (o_orderkey = l1.l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(28 rows)

