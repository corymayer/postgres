 EXPLAIN select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 313 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate LIMIT 100;
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1720251.35..1720251.60 rows=100 width=39)
   ->  Sort  (cost=1720251.35..1721725.08 rows=589489 width=39)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         ->  Finalize GroupAggregate  (cost=1626528.63..1697721.51 rows=589489 width=39)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=1626528.63..1688142.32 rows=491240 width=39)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=1625528.61..1630441.01 rows=245620 width=39)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=1625528.61..1626142.66 rows=245620 width=39)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 ->  Nested Loop  (cost=1210280.40..1596821.67 rows=245620 width=39)
                                       ->  Hash Join  (cost=1210279.96..1398198.47 rows=61412 width=39)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Hash Join  (cost=1179144.96..1362052.14 rows=61412 width=20)
                                                   Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..126338.49 rows=2500649 width=16)
                                                   ->  Hash  (cost=1176726.61..1176726.61 rows=147388 width=4)
                                                         ->  GroupAggregate  (cost=0.44..1175252.73 rows=147388 width=4)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::double precision)
                                                               ->  Index Scan using i_l_orderkey on lineitem lineitem_1  (cost=0.44..1049707.37 rows=24003662 width=8)
                                             ->  Hash  (cost=20119.00..20119.00 rows=600000 width=23)
                                                   ->  Seq Scan on customer  (cost=0.00..20119.00 rows=600000 width=23)
                                       ->  Index Scan using i_l_orderkey on lineitem  (cost=0.44..2.69 rows=54 width=8)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
(26 rows)

