 EXPLAIN select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and o_orderdate >= date '1993-01-01' and o_orderdate < date '1993-01-01' + interval '1 year' group by n_name order by revenue desc;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=183959.77..183959.83 rows=25 width=34)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))) DESC
   ->  Finalize GroupAggregate  (cost=183876.52..183959.19 rows=25 width=34)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=183876.52..183958.69 rows=50 width=34)
               Workers Planned: 2
               ->  Partial GroupAggregate  (cost=182876.50..182952.90 rows=25 width=34)
                     Group Key: nation.n_name
                     ->  Sort  (cost=182876.50..182891.73 rows=6092 width=34)
                           Sort Key: nation.n_name
                           ->  Hash Join  (cost=939.52..182493.53 rows=6092 width=34)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.52..179234.36 rows=152339 width=46)
                                       ->  Nested Loop  (cost=3.09..50285.41 rows=38092 width=38)
                                             ->  Hash Join  (cost=2.66..9033.41 rows=25000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..8312.00 rows=125000 width=8)
                                                   ->  Hash  (cost=2.60..2.60 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.60 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'EUROPE'::bpchar)
                                             ->  Index Scan using i_o_custkey on orders  (cost=0.43..1.62 rows=3 width=8)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.10 rows=29 width=16)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=636.00..636.00 rows=20000 width=8)
                                       ->  Seq Scan on supplier  (cost=0.00..636.00 rows=20000 width=8)
(31 rows)

