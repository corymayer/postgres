 EXPLAIN select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date '1995-01-01' and l_receiptdate < date '1995-01-01' + interval '1 year' group by l_shipmode order by l_shipmode;
                                                                                                                                  QUERY PLAN                                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=412736.47..413206.81 rows=7 width=27)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=412736.47..413206.64 rows=14 width=27)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=411736.45..412205.00 rows=7 width=27)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=411736.45..411795.01 rows=23424 width=27)
                     Sort Key: lineitem.l_shipmode
                     ->  Nested Loop  (cost=0.43..410036.37 rows=23424 width=27)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..325581.67 rows=23424 width=15)
                                 Filter: ((l_shipmode = ANY ('{MAIL,SHIP}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1995-01-01'::date) AND (l_receiptdate < '1996-01-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.61 rows=1 width=20)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
(13 rows)

